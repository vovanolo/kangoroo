{"version":3,"file":"static/js/373.11d08f0f.chunk.js","mappings":"2RAYMA,EACI,SADJA,EAEI,SAEK,SAASC,IACtB,IAAQC,GAAUC,EAAAA,EAAAA,IAAaC,EAAAA,GAAvBF,MACR,GAAsCG,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAwCF,EAAAA,EAAAA,UAAS,MAAjD,eAAOG,EAAP,KAAqBC,EAArB,KACA,GAAwBJ,EAAAA,EAAAA,UAAS,IAAjC,eAAOK,EAAP,KAAaC,EAAb,KACA,GAAgCN,EAAAA,EAAAA,WAAS,GAAzC,eAAOO,EAAP,KAAkBC,EAAlB,KA2CA,SAASC,EAAUC,GAAuB,IAAZC,EAAW,uDAAN,KACjCT,EAAeQ,GACfN,EAAgBO,EACjB,CAED,SAASC,IACPV,EAAe,KAChB,CAED,OAlDAW,EAAAA,EAAAA,YAAU,WAQR,OAPAL,GAAW,IACXM,EAAAA,EAAAA,MACGC,MAAK,SAACC,GACLV,EAAQU,EACT,IACAC,OAAM,SAACC,GAAD,OAASC,MAAMD,EAAIE,QAAnB,IACNC,SAAQ,kBAAMb,GAAW,EAAjB,IACJ,WACLF,EAAQ,IACRE,GAAW,EACZ,CACF,GAAE,KAuCD,iBAAKc,UAAU,4CAAf,WACE,mBACEA,UAAU,qEACVC,QAAS,kBAAMd,EAAUd,EAAhB,EAFX,yBAMA,SAAC,KAAD,CACE6B,KAAMvB,IAAgBN,EACtBiB,QAASA,EACTa,KAAMC,EAAAA,EAAAA,MACNC,UAAQ,EAJV,UAME,SAAC,KAAD,CAASC,SAnCf,SAAkBC,GAChBvB,GAAQ,SAACwB,GAAD,kBAAgBD,IAAhB,eAA8BC,GAA9B,GACT,EAiCkCC,cAAenB,OAE9C,SAAC,KAAD,CACEY,KAAMvB,IAAgBN,EACtBiB,QAASA,EACTa,KAAMC,EAAAA,EAAAA,MACNC,UAAQ,EAJV,UAME,SAAC,KAAD,CAAUK,MAAO7B,EAAc8B,SAvCrC,SAAqBtB,EAAIK,GACvBV,GAAQ,SAACwB,GAAD,OACNA,EAAKI,KAAI,SAAC7B,GAAD,OACPA,EAAKM,KAAOA,GAAZ,kBAAsBK,GAAtB,IAA4BL,GAAIN,EAAKM,MAArC,UAAiDN,EAD1C,GADH,GAKT,MAmCIE,IAAa,SAAC,IAAD,KACd,gBAAKe,UAAU,8DAAf,UACIf,GACAF,GACAA,EAAK6B,KAAI,WAAsCC,GAAtC,IAAGxB,EAAH,EAAGA,GAAIyB,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAaC,EAA3B,EAA2BA,QAA3B,OACP,iBAEEhB,UAAU,+DAFZ,WAIE,gBAAKA,UAAU,YAAf,UACE,gBACEiB,IAAKD,EACLE,IAAKJ,EACLK,MAAO,CAAEC,UAAW,KACpBpB,UAAU,kCAGd,cAAGA,UAAU,WAAb,SAAyBc,KACzB,uBAAIC,IAEHxC,IACC,iBAAKyB,UAAU,uEAAf,WACE,mBAAQC,QAAS,kBAAMd,EAAUd,EAAqBgB,EAArC,EAAjB,UACE,SAAC,MAAD,CAAec,KAAM,QAEvB,mBAAQF,QAAS,kBArFdS,EAqF8BrB,EApF/CH,GAAW,QACXmC,EAAAA,EAAAA,IAAcX,GACXjB,MAAK,SAAC6B,GACLtC,GAAQ,SAACwB,GAAD,OAAUA,EAAKe,QAAO,qBAAGlC,KAAgBqB,CAAnB,GAAtB,GACT,IACAf,OAAM,SAACC,GACN4B,QAAQC,IAAI7B,EACb,IACAG,SAAQ,WACPb,GAAW,GACXW,MAAM,UACP,IAZL,IAAmBa,CAqFc,EAAjB,UACE,SAAC,MAAD,CAAaP,KAAM,YApBpBU,EAFA,QA+BlB,C","sources":["pages/AdminPage/Tabs/NewsTab.jsx"],"sourcesContent":["import { useEffect, useState } from \"react\";\r\nimport { useAtomValue } from \"jotai\";\r\n\r\nimport { BsTrashFill } from \"react-icons/bs\";\r\nimport { AiTwotoneEdit } from \"react-icons/ai\";\r\n\r\nimport { authStorage } from \"../../../config/jotai\";\r\nimport { getNews, deleteNewById } from \"../../../api\";\r\nimport { Modal, AddNews, EditNews } from \"../../../components\";\r\nimport Loader from \"../../../components/Loader/Loader\";\r\nimport { SIZE_TYPE } from \"../../../components/Modal/Modal\";\r\n\r\nconst activeModals = {\r\n  create: \"CREATE\",\r\n  update: \"UPDATE\",\r\n};\r\nexport default function NewsTab() {\r\n  const { token } = useAtomValue(authStorage);\r\n  const [activeModal, setActiveModal] = useState(null);\r\n  const [choosenNewId, setChoosenNewId] = useState(null);\r\n  const [news, setNews] = useState([]);\r\n  const [isLoading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setLoading(true);\r\n    getNews()\r\n      .then((data) => {\r\n        setNews(data);\r\n      })\r\n      .catch((err) => alert(err.message))\r\n      .finally(() => setLoading(false));\r\n    return () => {\r\n      setNews([]);\r\n      setLoading(false);\r\n    };\r\n  }, []);\r\n\r\n  function deleteNew(newId) {\r\n    setLoading(true);\r\n    deleteNewById(newId)\r\n      .then((res) => {\r\n        setNews((prev) => prev.filter(({ id }) => id !== newId));\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n        alert(\"DELETED\");\r\n      });\r\n  }\r\n\r\n  function onAddNew(dataNew) {\r\n    setNews((prev) => [{ ...dataNew }, ...prev]);\r\n  }\r\n\r\n  function onUpdateNew(id, data) {\r\n    setNews((prev) =>\r\n      prev.map((news) =>\r\n        news.id === id ? { ...data, id: news.id } : { ...news }\r\n      )\r\n    );\r\n  }\r\n\r\n  function openModal(modalName, id = null) {\r\n    setActiveModal(modalName);\r\n    setChoosenNewId(id);\r\n  }\r\n\r\n  function onClose() {\r\n    setActiveModal(null);\r\n  }\r\n\r\n  return (\r\n    <div className=\"flex flex-col items-center justify-center\">\r\n      <button\r\n        className=\"px-8 py-4 bg-blue-300 hover:bg-blue-400 text-2xl transition-colors\"\r\n        onClick={() => openModal(activeModals.create)}\r\n      >\r\n        Create New\r\n      </button>\r\n      <Modal\r\n        open={activeModal === activeModals.create}\r\n        onClose={onClose}\r\n        size={SIZE_TYPE.small}\r\n        isDimmer\r\n      >\r\n        <AddNews onAddNew={onAddNew} onCloseModals={onClose} />\r\n      </Modal>\r\n      <Modal\r\n        open={activeModal === activeModals.update}\r\n        onClose={onClose}\r\n        size={SIZE_TYPE.small}\r\n        isDimmer\r\n      >\r\n        <EditNews newId={choosenNewId} onUpdate={onUpdateNew} />\r\n      </Modal>\r\n      {isLoading && <Loader />}\r\n      <div className=\"flex flex-wrap justify-center gap-8 container mx-auto mt-10\">\r\n        {!isLoading &&\r\n          news &&\r\n          news.map(({ id, title, description, preview }, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"flex flex-col items-center w-full sm:w-1/2 lg:w-1/4 relative\"\r\n            >\r\n              <div className=\"max-w-3xl\">\r\n                <img\r\n                  src={preview}\r\n                  alt={title}\r\n                  style={{ minHeight: 250 }}\r\n                  className=\"w-full h-full object-cover\"\r\n                />\r\n              </div>\r\n              <p className=\"text-3xl\">{title}</p>\r\n              <p>{description}</p>\r\n\r\n              {token && (\r\n                <div className=\"absolute top-0 right-0 flex gap-4 items-center bg-gray-200 px-4 py-2\">\r\n                  <button onClick={() => openModal(activeModals.update, id)}>\r\n                    <AiTwotoneEdit size={26} />\r\n                  </button>\r\n                  <button onClick={() => deleteNew(id)}>\r\n                    <BsTrashFill size={24} />\r\n                  </button>\r\n                </div>\r\n              )}\r\n            </div>\r\n          ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"names":["activeModals","NewsTab","token","useAtomValue","authStorage","useState","activeModal","setActiveModal","choosenNewId","setChoosenNewId","news","setNews","isLoading","setLoading","openModal","modalName","id","onClose","useEffect","getNews","then","data","catch","err","alert","message","finally","className","onClick","open","size","SIZE_TYPE","isDimmer","onAddNew","dataNew","prev","onCloseModals","newId","onUpdate","map","index","title","description","preview","src","alt","style","minHeight","deleteNewById","res","filter","console","log"],"sourceRoot":""}